# Generated by Django 3.2.8 on 2022-09-27 08:31

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('sub_title', models.CharField(max_length=200)),
                ('preview_video', models.TextField()),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='course/cover_image')),
                ('description', models.TextField()),
                ('requirement', models.TextField()),
                ('course_outcome', models.TextField()),
                ('resource_file', models.FileField(blank=True, null=True, upload_to='course/resource_file')),
                ('optional_reading', models.TextField(blank=True, null=True)),
                ('module_detail', models.TextField(blank=True, null=True)),
                ('price', models.IntegerField()),
                ('sale_price', models.IntegerField()),
                ('level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advance', 'Advance')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='course/lecture_video')),
                ('title', models.CharField(max_length=100)),
                ('video_length', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LiveClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('session_date', models.DateField()),
                ('session_time', models.TimeField()),
                ('video', models.FileField(upload_to='course/live_class')),
                ('resource_file', models.FileField(blank=True, null=True, upload_to='course/live_class/resource_file')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('exercise_file', models.FileField(blank=True, null=True, upload_to='course/module/exercise_file')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('review', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='VideoWatched',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seen', models.BooleanField(default=False)),
            ],
        ),
    ]
